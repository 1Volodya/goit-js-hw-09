{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAe/B,OAdgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAM,C,SACVR,E,MACAC,GAEFQ,YAAW,KACLJ,EACFF,EAAQK,GAERJ,EAAOI,EAAI,GAEZP,EAAM,G,CAyBbL,EAAKc,iBAAiB,UApBtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAeC,SAASlB,EAAKmB,SAASd,MAAMe,OAChD,MAAMC,EAAYH,SAASlB,EAAKmB,SAASG,KAAKF,OACxCG,EAAcL,SAASlB,EAAKmB,SAASK,OAAOJ,OAElD,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAaE,IAChCtB,EAAcsB,EAAGR,GACdS,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA6B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEhEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA6B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAGhEY,GAAgBI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const obj = {\n      position,\n      delay,\n    };\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(obj);\n      } else {\n        reject(obj);\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let currentDelay = parseInt(form.elements.delay.value);\n  const stepValue = parseInt(form.elements.step.value);\n  const amountValue = parseInt(form.elements.amount.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += stepValue;\n  }\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","obj","setTimeout","addEventListener","event","preventDefault","currentDelay","parseInt","elements","value","stepValue","step","amountValue","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.1959b304.js.map"}